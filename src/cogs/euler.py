from discord.ext import commands
import discord

#problmes
p1 = """
Multiples of 3 and 5\n
Problem 1\n
if we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.Find the sum of all the multiples of 3 or 5 below 1000.
"""

p2 = """
Even Fibonacci numbers\n
Problem 2\n
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

p3 = """
Largest prime factor\n
Problem 3\n
The prime factors of 13195 are 5, 7, 13 and 29.\n
What is the largest prime factor of the number 600851475143 ?
"""

p4 = """
Largest palindrome product\n
Problem 4\n
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.\n
Find the largest palindrome made from the product of two 3-digit numbers.
"""

p5 = """
Smallest multiple\n
Problem 5\n
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.\n
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
"""

p6 = """
Sum square difference\n
Problem 6\n
The sum of the squares of the first ten natural numbers is,\n
https://cdn.discordapp.com/attachments/785018975057608705/785018991335964702/unknown.png\n
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is\n
https://cdn.discordapp.com/attachments/785018975057608705/785019163630501918/unknown.png\n
Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
"""

p7 = """
10001st prime\n
Problem 7\n
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.\n
What is the 10 001st prime number?
"""

p8 = """
Largest product in a series\n
Problem 8\n
The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.\n
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450\n
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
"""

p9 = """
Special Pythagorean triplet\n
Problem 9\n
A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,\n
a^2 + b^2 = c^2\n
For example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.\n
There exists exactly one Pythagorean triplet for which a + b + c = 1000.\n
Find the product abc.
"""

p10 = """
Summation of primes\n
Problem 10\n
The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.\n
Find the sum of all the primes below two million.
"""

class euler(commands.Cog, name='Euler'):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def e1(self, ctx):
        embed = discord.Embed(description=p1)
        await ctx.send(embed=embed)

    @commands.command()
    async def e2(self, ctx):
        embed = discord.Embed(description=p2)
        await ctx.send(embed=embed)

    @commands.command()
    async def e3(self, ctx):
        embed = discord.Embed(description=p3)
        await ctx.send(embed=embed)

    @commands.command()
    async def e4(self, ctx):
        embed = discord.Embed(description=p4)
        await ctx.send(embed=embed)

    @commands.command()
    async def e5(self, ctx):
        embed = discord.Embed(description=p5)
        await ctx.send(embed=embed)

    @commands.command()
    async def e6(self, ctx):
        embed = discord.Embed(description=p6)
        await ctx.send(embed=embed)

    @commands.command()
    async def e7(self, ctx):
        embed = discord.Embed(description=p7)
        await ctx.send(embed=embed)

    @commands.command()
    async def e8(self, ctx):
        embed = discord.Embed(description=p8)
        await ctx.send(embed=embed)

    @commands.command()
    async def e9(self, ctx):
        embed = discord.Embed(description=p9)
        await ctx.send(embed=embed)

    @commands.command()
    async def e10(self, ctx):
        embed = discord.Embed(description=p10)
        await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(euler(bot))